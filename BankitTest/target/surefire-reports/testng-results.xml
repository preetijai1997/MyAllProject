<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="4" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[<br>Verification Failure expected [xyz] but found [abc]]]>
    </line>
    <line>
      <![CDATA[<a  target="_blank" href=Fri_May_05_00_28_23_IST_2023.png> <img src=Fri_May_05_00_28_23_IST_2023.png height=200 width=300> </img></a>]]>
    </line>
    <line>
      <![CDATA[<br>]]>
    </line>
    <line>
      <![CDATA[<br>]]>
    </line>
    <line>
      <![CDATA[Login Successfully]]>
    </line>
  </reporter-output>
  <suite started-at="2023-05-05T00:28:23 IST" name="Suite" finished-at="2023-05-05T00:28:48 IST" duration-ms="25544">
    <groups>
    </groups>
    <test started-at="2023-05-05T00:28:23 IST" name=" Login Test" finished-at="2023-05-05T00:28:40 IST" duration-ms="17165">
      <class name="testcase.LoginTest">
        <test-method signature="login()[pri:1, instance:testcase.LoginTest@6c372fe6]" started-at="2023-05-05T00:28:23 IST" name="login" finished-at="2023-05-05T00:28:40 IST" duration-ms="16841" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[<br>Verification Failure expected [xyz] but found [abc]]]>
            </line>
            <line>
              <![CDATA[<a  target="_blank" href=Fri_May_05_00_28_23_IST_2023.png> <img src=Fri_May_05_00_28_23_IST_2023.png height=200 width=300> </img></a>]]>
            </line>
            <line>
              <![CDATA[<br>]]>
            </line>
            <line>
              <![CDATA[<br>]]>
            </line>
            <line>
              <![CDATA[Login Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
      </class> <!-- testcase.LoginTest -->
    </test> <!--  Login Test -->
    <test started-at="2023-05-05T00:28:40 IST" name="RentPay Test" finished-at="2023-05-05T00:28:40 IST" duration-ms="371">
      <class name="testcase.RentPaymentClass">
        <test-method signature="rentPayment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:testcase.RentPaymentClass@4e31276e]" started-at="2023-05-05T00:28:40 IST" name="rentPayment" finished-at="2023-05-05T00:28:40 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Cannot inject @Test annotated Method [rentPayment] with [class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [rentPayment] with [class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String, class java.lang.String].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:436)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:350)
at org.testng.internal.Parameters.createParameters(Parameters.java:693)
at org.testng.internal.Parameters.handleParameters(Parameters.java:879)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:924)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rentPayment -->
      </class> <!-- testcase.RentPaymentClass -->
    </test> <!-- RentPay Test -->
    <test started-at="2023-05-05T00:28:40 IST" name="Excel Test" finished-at="2023-05-05T00:28:48 IST" duration-ms="7965">
      <class name="utilitity.ExcelReader">
        <test-method is-config="true" signature="setUp()[pri:0, instance:utilitity.ExcelReader@16b2bb0c]" started-at="2023-05-05T00:28:17 IST" name="setUp" finished-at="2023-05-05T00:28:23 IST" duration-ms="5277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="RentPayment()[pri:0, instance:utilitity.ExcelReader@16b2bb0c]" started-at="2023-05-05T00:28:40 IST" name="RentPayment" finished-at="2023-05-05T00:28:48 IST" duration-ms="7931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RentPayment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:utilitity.ExcelReader@16b2bb0c]" started-at="2023-05-05T00:28:48 IST" name="tearDown" finished-at="2023-05-05T00:28:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- utilitity.ExcelReader -->
    </test> <!-- Excel Test -->
  </suite> <!-- Suite -->
</testng-results>
